events {
	worker_connections  4000;
}
http {
    server {
        listen 80;

        # this is the internal Docker DNS, cache only for 30s
        # prevent using old container address
        resolver 127.0.0.11 valid=30s;


        # DOMAIN_NAME will be replace at runtime 
        server_name DOMAIN_NAME;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;

        include /nginx_configs/configurations/letsencrypt.conf;

        location ^~/heartbeat {
            return 200 'I\'m alive!';     
        }

        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }
    }

    server {
        listen 443 ssl; 
        # this is the internal Docker DNS, cache only for 30s
        # prevent using old container address
        resolver 127.0.0.11 valid=30s;


        # DOMAIN_NAME will be replace at runtime 
        server_name $DOMAIN_NAME;

        ssl_certificate      /etc/nginx/certs/$SSL_CERTIFICATE;
        ssl_certificate_key  /etc/nginx/certs/$SSL_PRIVATE_KEY;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;

        
        include /nginx_configs/configurations/kibana.conf;
        include /nginx_configs/configurations/apis.conf;
        include /nginx_configs/configurations/letsencrypt.conf;
    }
}
